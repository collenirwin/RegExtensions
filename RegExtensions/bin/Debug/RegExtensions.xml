<?xml version="1.0"?>
<doc>
    <assembly>
        <name>RegExtensions</name>
    </assembly>
    <members>
        <member name="T:RegExtensions.StringExtensions">
            <summary>
            Extension versions of the static methods in the
            <see cref="T:System.Text.RegularExpressions.Regex"/> class
            </summary>
        </member>
        <member name="M:RegExtensions.StringExtensions.IsMatch(System.String,System.String)">
            <summary>
            Indicates whether the regular expression specified in the Regex constructor finds a match in a specified input string.
            </summary>
            <param name="text">The string to search for a match.</param>
            <param name="regex">The regular expression pattern to match.</param>
            <returns>true if the regular expression finds a match; otherwise, false.</returns>
        </member>
        <member name="M:RegExtensions.StringExtensions.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            Indicates whether the specified regular expression finds a match in the specified input string,
            using the specified matching options.
            </summary>
            <param name="text">The string to search for a match.</param>
            <param name="regex">The regular expression pattern to match.</param>
            <param name="options">A bitwise combination of the enumeration values that provide options for matching.</param>
            <returns>true if the regular expression finds a match; otherwise, false.</returns>
        </member>
        <member name="M:RegExtensions.StringExtensions.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
            <summary>
            Indicates whether the specified regular expression finds a match in the specified input string,
            using the specified matching options and time-out interval.
            </summary>
            <param name="text">The string to search for a match.</param>
            <param name="regex">The regular expression pattern to match.</param>
            <param name="options">A bitwise combination of the enumeration values that provide options for matching.</param>
            <param name="timeout">
            A time-out interval, or <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout"/> to indicate that the method should not time out.
            </param>
            <returns>true if the regular expression finds a match; otherwise, false.</returns>
        </member>
        <member name="M:RegExtensions.StringExtensions.Match(System.String,System.String)">
            <summary>
            Searches the specified input string for the first occurrence of the specified regular expression.
            </summary>
            <param name="text">The string to search for a match.</param>
            <param name="regex">The regular expression pattern to match.</param>
            <returns>An object that contains information about the match.</returns>
        </member>
        <member name="M:RegExtensions.StringExtensions.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            Searches the input string for the first occurrence of the specified regular expression,
            using the specified matching options.
            </summary>
            <param name="text">The string to search for a match.</param>
            <param name="regex">The regular expression pattern to match.</param>
            <param name="options">A bitwise combination of the enumeration values that provide options for matching.</param>
            <returns>An object that contains information about the match.</returns>
        </member>
        <member name="M:RegExtensions.StringExtensions.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
            <summary>
            Searches the input string for the first occurrence of the specified regular expression,
            using the specified matching options and time-out interval.
            </summary>
            <param name="text">The string to search for a match.</param>
            <param name="regex">The regular expression pattern to match.</param>
            <param name="options">A bitwise combination of the enumeration values that provide options for matching.</param>
            <param name="timeout">
            A time-out interval, or <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout"/> to indicate that the method should not time out.
            </param>
            <returns>An object that contains information about the match.</returns>
        </member>
        <member name="M:RegExtensions.StringExtensions.Matches(System.String,System.String)">
            <summary>
            Searches the specified input string for all occurrences of a specified regular expression.
            </summary>
            <param name="text">The string to search for a match.</param>
            <param name="regex">The regular expression pattern to match.</param>
            <returns>
            A collection of the Match objects found by the search.
            If no matches are found, the method returns an empty collection object.
            </returns>
        </member>
        <member name="M:RegExtensions.StringExtensions.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            Searches the specified input string for all occurrences of a specified regular expression,
            using the specified matching options.
            </summary>
            <param name="text">The string to search for a match.</param>
            <param name="regex">The regular expression pattern to match.</param>
            <param name="options">A bitwise combination of the enumeration values that provide options for matching.</param>
            <returns>
            A collection of the Match objects found by the search.
            If no matches are found, the method returns an empty collection object.
            </returns>
        </member>
        <member name="M:RegExtensions.StringExtensions.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
            <summary>
            Searches the input string for the first occurrence of the specified regular expression,
            using the specified matching options and time-out interval.
            </summary>
            <param name="text">The string to search for a match.</param>
            <param name="regex">The regular expression pattern to match.</param>
            <param name="options">A bitwise combination of the enumeration values that provide options for matching.</param>
            <param name="timeout">
            A time-out interval, or <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout"/> to indicate that the method should not time out.
            </param>
            <returns>
            A collection of the Match objects found by the search.
            If no matches are found, the method returns an empty collection object.
            </returns>
        </member>
        <member name="M:RegExtensions.StringExtensions.EnumerateMatches(System.String,System.String)">
            <summary>
            Searches the specified input string for all occurrences of a specified regular expression.
            </summary>
            <param name="text">The string to search for a match.</param>
            <param name="regex">The regular expression pattern to match.</param>
            <returns>The result of text.Matches(...) cast as an IEnumerable of Match objects</returns>
        </member>
        <member name="M:RegExtensions.StringExtensions.EnumerateMatches(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            Searches the specified input string for all occurrences of a specified regular expression,
            using the specified matching options.
            </summary>
            <param name="text">The string to search for a match.</param>
            <param name="regex">The regular expression pattern to match.</param>
            <param name="options">A bitwise combination of the enumeration values that provide options for matching.</param>
            <returns>The result of text.Matches(...) cast as an IEnumerable of Match objects</returns>
        </member>
        <member name="M:RegExtensions.StringExtensions.EnumerateMatches(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
            <summary>
            Searches the input string for the first occurrence of the specified regular expression,
            using the specified matching options and time-out interval.
            </summary>
            <param name="text">The string to search for a match.</param>
            <param name="regex">The regular expression pattern to match.</param>
            <param name="options">A bitwise combination of the enumeration values that provide options for matching.</param>
            <param name="timeout">
            A time-out interval, or <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout"/> to indicate that the method should not time out.
            </param>
            <returns>The result of text.Matches(...) cast as an IEnumerable of Match objects</returns>
        </member>
        <member name="M:RegExtensions.StringExtensions.RegexReplace(System.String,System.String,System.String)">
            <summary>
            In a specified input string, replaces all strings that match a specified regular expression with a specified replacement string.
            </summary>
            <param name="text">The string to search for a match.</param>
            <param name="regex">The regular expression pattern to match.</param>
            <param name="replacement">The replacement string.</param>
            <returns>
            A new string that is identical to the input string, except that the replacement string takes the place of each matched string.
            If pattern is not matched in the current instance, the method returns the current instance unchanged.
            </returns>
        </member>
        <member name="M:RegExtensions.StringExtensions.RegexReplace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            In a specified input string, replaces all strings that match a specified regular expression with a specified replacement string.
            Specified options modify the matching operation.
            </summary>
            <param name="text">The string to search for a match.</param>
            <param name="regex">The regular expression pattern to match.</param>
            <param name="replacement">The replacement string.</param>
            <param name="options">A bitwise combination of the enumeration values that provide options for matching.</param>
            <returns>
            A new string that is identical to the input string, except that the replacement string takes the place of each matched string.
            If pattern is not matched in the current instance, the method returns the current instance unchanged.
            </returns>
        </member>
        <member name="M:RegExtensions.StringExtensions.RegexReplace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
            <summary>
            In a specified input string, replaces all strings that match a specified regular expression with a specified replacement string.
            Additional parameters specify options that modify the matching operation and a time-out interval if no match is found.
            </summary>
            <param name="text">The string to search for a match.</param>
            <param name="regex">The regular expression pattern to match.</param>
            <param name="replacement">The replacement string.</param>
            <param name="options">A bitwise combination of the enumeration values that provide options for matching.</param>
            <param name="timeout">
            A time-out interval, or <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout"/> to indicate that the method should not time out.
            </param>
            <returns>
            A new string that is identical to the input string, except that the replacement string takes the place of each matched string.
            If pattern is not matched in the current instance, the method returns the current instance unchanged.
            </returns>
        </member>
        <member name="M:RegExtensions.StringExtensions.RegexReplace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator)">
            <summary>
            In a specified input string, replaces all strings that match a specified regular expression with a string returned by a MatchEvaluator delegate.
            </summary>
            <param name="text">The string to search for a match.</param>
            <param name="regex">The regular expression pattern to match.</param>
            <param name="evaluator">A custom method that examines each match and returns either the original matched string or a replacement string.</param>
            <returns>
            A new string that is identical to the input string, except that the replacement string takes the place of each matched string.
            If pattern is not matched in the current instance, the method returns the current instance unchanged.
            </returns>
        </member>
        <member name="M:RegExtensions.StringExtensions.RegexReplace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            In a specified input string, replaces all strings that match a specified regular expression with a string returned by a MatchEvaluator delegate.
            Specified options modify the matching operation.
            </summary>
            <param name="text">The string to search for a match.</param>
            <param name="regex">The regular expression pattern to match.</param>
            <param name="evaluator">A custom method that examines each match and returns either the original matched string or a replacement string.</param>
            <param name="options">A bitwise combination of the enumeration values that provide options for matching.</param>
            <returns>
            A new string that is identical to the input string, except that the replacement string takes the place of each matched string.
            If pattern is not matched in the current instance, the method returns the current instance unchanged.
            </returns>
        </member>
        <member name="M:RegExtensions.StringExtensions.RegexReplace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
            <summary>
            In a specified input string, replaces all substrings that match a specified regular expression with a string returned by a MatchEvaluator delegate.
            Additional parameters specify options that modify the matching operation and a time-out interval if no match is found.
            </summary>
            <param name="text">The string to search for a match.</param>
            <param name="regex">The regular expression pattern to match.</param>
            <param name="evaluator">A custom method that examines each match and returns either the original matched string or a replacement string.</param>
            <param name="options">A bitwise combination of the enumeration values that provide options for matching.</param>
            <param name="timeout">
            A time-out interval, or <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout"/> to indicate that the method should not time out.
            </param>
            <returns>
            A new string that is identical to the input string, except that the replacement string takes the place of each matched string.
            If pattern is not matched in the current instance, the method returns the current instance unchanged.
            </returns>
        </member>
        <member name="M:RegExtensions.StringExtensions.RegexSplit(System.String,System.String)">
            <summary>
            Splits an input string into an array of substrings at the positions defined by a regular expression pattern.
            </summary>
            <param name="text">The string to split.</param>
            <param name="regex">The regular expression pattern to match.</param>
            <returns>An array of strings.</returns>
        </member>
        <member name="M:RegExtensions.StringExtensions.RegexSplit(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            Splits an input string into an array of substrings at the positions defined by a specified regular expression pattern.
            Specified options modify the matching operation.
            </summary>
            <param name="text">The string to split.</param>
            <param name="regex">The regular expression pattern to match.</param>
            <param name="options">A bitwise combination of the enumeration values that provide options for matching.</param>
            <returns>An array of strings.</returns>
        </member>
        <member name="M:RegExtensions.StringExtensions.RegexSplit(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
            <summary>
            Splits an input string into an array of substrings at the positions defined by a specified regular expression pattern.
            Additional parameters specify options that modify the matching operation and a time-out interval if no match is found.
            </summary>
            <param name="text">The string to split.</param>
            <param name="regex">The regular expression pattern to match.</param>
            <param name="options">A bitwise combination of the enumeration values that provide options for matching.</param>
            <param name="timeout">
            A time-out interval, or <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout"/> to indicate that the method should not time out.
            </param>
            <returns>An array of strings.</returns>
        </member>
    </members>
</doc>
